{
    "name": "opgg-electron-app",
    "version": "1.0.20",
    "description": "",
    "main": "main/index.js",
    "scripts": {
        "start": "electron .",
        "dev": "electron . --dev",
        "pack": "electron-builder --dir",
        "dist": "electron-builder",
        "publish": "cross-env AWS_ACCESS_KEY_ID=AKIAYBJREVDSMXWKGZYM AWS_SECRET_ACCESS_KEY=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 electron-builder -p always",
        "win": "electron-builder --windows nsis:x64",
        "react:dev": "parcel ./renderer/react.html --port 4000 --no-cache --out-dir ./assets/react",
        "react:build": "rm -rf ./assets/react && cross-env NODE_ENV=production parcel build ./renderer/react.html --public-url . --no-source-maps --no-cache --out-dir ./assets/react  && mkdir ./assets/react/assets && cp -rf ./assets/images ./assets/react/assets/images",
        "react:build-win": "rmdir /s /q assets\\react && cross-env NODE_ENV=production parcel build ./renderer/react.html --public-url . --no-source-maps --no-cache --out-dir ./assets/react  && xcopy assets\\images assets\\react\\assets\\images\\ /e /i /y /s",
        "react:build-win-sourcemap": "rmdir /s /q assets\\react && cross-env NODE_ENV=production parcel build ./renderer/react.html --public-url . --no-cache --out-dir ./assets/react  && xcopy assets\\images assets\\react\\assets\\images\\ /e /i /y /s",
        "react:build-nmp-sourcemap": "rmdir /s /q assets\\react && cross-env NODE_ENV=production VERSION_STRING=nmp parcel build ./renderer/react.html --no-minify --public-url . --no-cache --out-dir ./assets/react  && xcopy assets\\images assets\\react\\assets\\images\\ /e /i /y /s",
        "react:electron": "cross-env NODE_ENV=development IS_REACT=true ELECTRON_START_URL=http://localhost:4000 electron ./main/index.js",
        "react:electron-nmp": "cross-env NODE_ENV=development VERSION_STRING=nmp IS_REACT=true ELECTRON_START_URL=http://localhost:4000 electron ./main/index.js",
        "react:dist": "cross-env NODE_ENV=production yarn react:build && electron-builder build -c.extraMetadata.main=./main/index.js",
        "react:dist-win": "cross-env NODE_ENV=production npm run react:build-win-sourcemap && electron-builder build -c.extraMetadata.main=./main/index.js",
        "react:dist-nmp": "cross-env NODE_ENV=production VERSION_STRING=nmp npm run react:build-nmp-sourcemap && electron-builder build -c.extraMetadata.main=./main/index.js",
        "react:publish": "cross-env NODE_ENV=production AWS_ACCESS_KEY_ID=AKIAYBJREVDSMXWKGZYM AWS_SECRET_ACCESS_KEY=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 yarn react:build && electron-builder build -c.extraMetadata.main=./main/index.js -p always",
        "react:publish2": "cross-env NODE_ENV=production AWS_ACCESS_KEY_ID=AKIAYBJREVDSB5P4KRH6 AWS_SECRET_ACCESS_KEY=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 npm run react:build && electron-builder build -c.extraMetadata.main=./main/index.js -p always",
        "react:publish-win": "cross-env AWS_ACCESS_KEY_ID=AKIAYBJREVDSMXWKGZYM AWS_SECRET_ACCESS_KEY=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 NODE_ENV=production npm run react:build-win && electron-builder build -c.extraMetadata.main=./main/index.js -p always",
        "react:start": "concurrently 'cross-env BROWSER=none yarn react:dev' 'mkdir -p ./assets/react/assets && cp -rf ./assets/images/ ./assets/react/assets/images/' 'wait-on http://localhost:4000 && yarn react:electron'",
        "react:start-win": "concurrently \"cross-env BROWSER=none npm run react:dev\" \"xcopy assets\\images assets\\react\\assets\\images\\ /e /i /y /s \" \"wait-on http://localhost:4000 && npm run react:electron\"",
        "react:start-nmp": "concurrently \"cross-env BROWSER=none npm run react:dev\" \"xcopy assets\\images assets\\react\\assets\\images\\ /e /i /y /s \" \"wait-on http://localhost:4000 && npm run react:electron-nmp\"",
        "react:start-win-prod": "cross-env BROWSER=none npm run react:build-win-sourcemap && xcopy assets\\images assets\\react\\assets\\images\\ /e /i /y /s && npm run react:electron-prod",
        "react:electron-prod": "cross-env NODE_ENV=production IS_REACT=true electron ./main/index.js",
        "wintest": "parcel ./renderer/react.html",
        "build:rust": "electron-build-env neon build rust-process --release"
    },
    "author": "OP.GG",
    "devDependencies": {
        "@types/react": "^17.0.0",
        "@types/react-dom": "^16.9.9",
        "@types/react-redux": "^7.1.11",
        "concurrently": "^5.3.0",
        "electron": "^11.4.3",
        "electron-build-env": "^0.2.0",
        "electron-builder": "^22.10.5",
        "electron-rebuild": "^2.3.5",
        "neon-cli": "^0.7.1",
        "parcel-bundler": "^1.12.4",
        "typescript": "^4.0.5",
        "wait-on": "^5.2.1"
    },
    "dependencies": {
        "14": "^3.1.6",
        "@amplitude/node": "^1.5.4",
        "@emotion/react": "^11.4.1",
        "@emotion/styled": "^11.3.0",
        "@reduxjs/toolkit": "^1.5.0",
        "@tippyjs/react": "^4.2.0",
        "@types/lodash": "^4.14.168",
        "@types/react-copy-to-clipboard": "^5.0.0",
        "@types/react-modal": "^3.12.0",
        "@types/react-router-dom": "^5.1.6",
        "@types/react-toastr": "^3.0.4",
        "@types/redux-logger": "^3.0.8",
        "@types/toastr": "^2.1.38",
        "assets": "^3.0.1",
        "axios": "^0.19.2",
        "cross-env": "^7.0.2",
        "dotenv": "^8.2.0",
        "electron-updater": "^4.3.4",
        "i18next": "^19.8.2",
        "jquery": "^3.5.1",
        "jquery-i18next": "^1.2.1",
        "lodash": "^4.17.20",
        "mixpanel": "^0.13.0",
        "mixpanel-browser": "^2.41.0",
        "node-localstorage": "^2.1.6",
        "os-locale": "^5.0.0",
        "react": "^17.0.2",
        "react-copy-to-clipboard": "^5.0.3",
        "react-dom": "^17.0.2",
        "react-ga": "^3.3.0",
        "react-i18next": "^11.8.5",
        "react-is": "^17.0.2",
        "react-modal": "^3.12.1",
        "react-outside-click-handler": "^1.3.0",
        "react-redux": "^7.2.2",
        "react-router-dom": "^5.2.0",
        "react-toastr": "^3.0.0",
        "recharts": "^2.1.4",
        "redux-logger": "^3.0.6",
        "sass": "^1.32.8",
        "styled-components": "^5.3.0",
        "tippy.js": "^6.2.7",
        "toastr": "^2.1.4",
        "universal-analytics": "^0.4.23",
        "uuid": "^8.3.0",
        "ws": "^8.5.0",
        "yaml": "^1.10.0"
    },
    "optionalDependencies": {
        "electron-overlay": "file:./app.asar.unpacked/electron-overlay",
        "node-ovhook": "file:./app.asar.unpacked/node-ovhook",
        "rust-process": "file:./app.asar.unpacked/rust-process"
    },
    "protocol": {
        "name": "OP.GG",
        "schemes": [
            "opgg"
        ]
    },
    "browserslist": [
        "last 2 Chrome versions"
    ]
}